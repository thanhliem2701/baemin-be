generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model banneritems {
  id     Int     @id @default(autoincrement())
  name   String  @db.VarChar(255)
  url    String? @db.VarChar(500)
  imgsrc String?
}

model menu {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  imgsrc      String? @db.VarChar(500)
  description String?
}

model branches {
  id               Int          @id(map: "branch_pkey") @default(autoincrement())
  name             String       @db.VarChar(255)
  address          String?
  img              String?
  tradinghour      String?
  pricerange       String?
  total_rating     Float?
  number_of_rating Int?
  company_id       Int?
  created_at       DateTime?    @default(now()) @db.Timestamp(6)
  updated_at       DateTime?    @default(now()) @db.Timestamp(6)
  companies        companies?   @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "branch_company_id_fkey")
  branchmenu       branchmenu[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model branchmenu {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  icon        String?
  branch_id   Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  updated_at  DateTime?     @default(now()) @db.Timestamp(6)
  menu_flag   Int?          @default(0)
  branches    branches?     @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  combo_foods combo_foods[]
}

model combo_foods {
  id             Int            @id(map: "combo_pkey") @default(autoincrement())
  menu_id        Int?
  name           String         @db.VarChar(255)
  description    String?
  price          Decimal?       @db.Decimal(10, 2)
  img            String?
  created_at     DateTime?      @default(now()) @db.Timestamp(6)
  updated_at     DateTime?      @default(now()) @db.Timestamp(6)
  promotion_flag Int?           @default(3)
  tag            String?        @db.VarChar(250)
  branchmenu     branchmenu?    @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "combo_menu_id_fkey")
  order_detail   order_detail[]
}

model companies {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  img        String?
  tel        String?    @db.VarChar(20)
  address    String?
  commission Float?
  tag        String?    @db.VarChar(100)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  branches   branches[]
}

model order_detail {
  id          Int         @id @default(autoincrement())
  order_id    Int?
  food_id     Int
  name        String?     @db.VarChar(255)
  quantity    Int?
  amount      Decimal?    @db.Decimal(10, 2)
  created_at  DateTime?   @default(now()) @db.Timestamp(6)
  updated_at  DateTime?   @default(now()) @db.Timestamp(6)
  combo_foods combo_foods @relation(fields: [food_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders      orders?     @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orders {
  id               Int            @id @default(autoincrement())
  user_id          Int?
  user_name        String?        @db.VarChar(255)
  user_phone       String?        @db.VarChar(20)
  delivery_address String?
  total_price      Decimal?       @db.Decimal(10, 2)
  del_flag         Boolean?       @default(false)
  created_at       DateTime?      @default(now()) @db.Timestamp(6)
  updated_at       DateTime?      @default(now()) @db.Timestamp(6)
  discount_code    String?
  discount_amount  Decimal?       @default(0) @db.Decimal(10, 2)
  order_detail     order_detail[]
  users            users?         @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model users {
  id         Int       @id @default(autoincrement())
  first_name String    @db.VarChar(100)
  last_name  String    @db.VarChar(100)
  username   String    @unique @db.VarChar(100)
  phone      String    @unique @db.VarChar(20)
  email      String    @unique @db.VarChar(150)
  password   String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  orders     orders[]
}

model promotions {
  id            Int      @id @default(autoincrement())
  promotioncode String
  expire_date   DateTime @db.Date
  companies_id  String?
}
